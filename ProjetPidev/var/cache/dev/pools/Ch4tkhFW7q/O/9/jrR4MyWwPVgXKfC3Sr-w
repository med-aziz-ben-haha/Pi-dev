<?php //%255BApp%255CEntity%255CMedicament%2524dispo%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotNull'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotNull')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Range'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Range')),
        clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
    ],
    null,
    [
        'stdClass' => [
            'type' => [
                'integer',
            ],
            'message' => [
                1 => 'Dispobinilité obligatoire *',
            ],
            'groups' => [
                1 => [
                    'Default',
                ],
                [
                    'Default',
                ],
            ],
            'notInRangeMessage' => [
                2 => ' Entrez {{ min }} si le médicament est indisponible et {{ max }} s\'il est disponible',
            ],
            'min' => [
                2 => 0,
            ],
            'max' => [
                2 => 1,
            ],
        ],
        'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
            'groups' => [
                3 => [
                    'post:read',
                ],
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
        $o[3],
    ],
    []
); }];
